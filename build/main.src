import_code("/home/skidmall/viperclone/libs/error.src")
import_code("/home/skidmall/viperclone/libs/functional.src")
import_code("/home/skidmall/viperclone/managers/command/command-manager.src")
import_code("/home/skidmall/viperclone/managers/command/command.src")
import_code("/home/skidmall/viperclone/mediator.src")
import_code("/home/skidmall/viperclone/facades/computer-objects/file.src")
import_code("/home/skidmall/viperclone/libs/ssv.src")
import_code("/home/skidmall/viperclone/facades/computer-objects/computer.src")
import_code("/home/skidmall/viperclone/facades/computer-objects/shell.src")
import_code("/home/skidmall/viperclone/facades/computer-objects/computer-object-factory.src")
import_code("/home/skidmall/viperclone/utils/string.src")
import_code("/home/skidmall/viperclone/utils/climbFileToRoot.src")
import_code("/home/skidmall/viperclone/utils/getUserFromHandler.src")
import_code("/home/skidmall/viperclone/managers/session/file.src")
import_code("/home/skidmall/viperclone/managers/session/computer.src")
import_code("/home/skidmall/viperclone/managers/session/shell.src")
import_code("/home/skidmall/viperclone/managers/session/session.src")
import_code("/home/skidmall/viperclone/managers/session/session-manager.src")
import_code("/home/skidmall/viperclone/facades/lib-objects/metaxploit.src")
import_code("/home/skidmall/viperclone/facades/lib-objects/crypto.src")
import_code("/home/skidmall/viperclone/managers/lib/lib-manager.src")
import_code("/home/skidmall/viperclone/managers/lib/metaxploit-manager.src")
import_code("/home/skidmall/viperclone/libs/viper-ui.src")
import_code("/home/skidmall/viperclone/facades/network/router.src")
import_code("/home/skidmall/viperclone/managers/macro/macro-manager.src")
import_code("/home/skidmall/viperclone/managers/dictionary/list-1.src")
import_code("/home/skidmall/viperclone/managers/dictionary/list-2.src")
import_code("/home/skidmall/viperclone/managers/dictionary/list-3.src")
import_code("/home/skidmall/viperclone/managers/dictionary/list-4.src")
import_code("/home/skidmall/viperclone/managers/dictionary/list-5.src")
import_code("/home/skidmall/viperclone/managers/dictionary/list-6.src")
import_code("/home/skidmall/viperclone/managers/dictionary/dictionary-manager.src")
extensionMediator=ExtensionMediator.New
commandManager=CommandManager.New
extensionMediator.addExtension("commandManager",commandManager)
sessionManager=SessionManager.New
extensionMediator.addExtension("sessionManager",sessionManager)
libManager=LibManager.New
extensionMediator.addExtension("libManager",libManager)
metaxploitManager=MetaxploitManager.New
extensionMediator.addExtension("metaxploitManager",metaxploitManager)
macroManager=MacroManager.New
extensionMediator.addExtension("macroManager",macroManager)
dictionaryManager=DictionaryManager.New
extensionMediator.addExtension("dictionaryManager",dictionaryManager)
import_code("/home/skidmall/viperclone/jumpfile/jumpfile-text.src")
import_code("/home/skidmall/viperclone/libs/random-ip.src")
import_code("/home/skidmall/viperclone/commands.src")
init=function()
sessionManager=extensionMediator.getExtension("sessionManager")
libManager=extensionMediator.getExtension("libManager")
sessionManager.addSession(get_shell)
libManager=extensionMediator.getExtension("libManager")
metaxploit=sessionManager.currentSession.handler.getFile("metaxploit.so")
if metaxploit isa Error then
metaxploit=sessionManager.currentSession.handler.getFile("/lib/metaxploit.so")
end if
if not (metaxploit isa Error) then
meta=include_lib(metaxploit.path)
if meta!=null then
libManager.addLib(meta,{"ip":sessionManager.currentSession.data.ip,"path":metaxploit.path})
end if
end if
cryptoFile=sessionManager.currentSession.handler.getFile("crypto.so")
if cryptoFile isa Error then
cryptoFile=sessionManager.currentSession.handler.getFile("/lib/crypto.so")
end if
if not (cryptoFile isa Error) then
crypto=include_lib(cryptoFile.path)
if crypto!=null then
libManager.addLib(crypto,{"ip":sessionManager.currentSession.data.ip,"path":cryptoFile.path})
end if
end if
clear_screen
ViperUi.init
currentLibs=libManager.currentLibs
listCurrentLibs=[]
for lib in currentLibs
listCurrentLibs.push(lib.value)
end for
ViperUi.currentLibs(listCurrentLibs)
macroManager=extensionMediator.getExtension("macroManager")
macros=macroManager.init
end function
main=function()
commandManager=extensionMediator.getExtension("commandManager")
commandManager.run
dictionaryManager=extensionMediator.getExtension("dictionaryManager")
dictionaryManager.reset
sessionManager=extensionMediator.getExtension("sessionManager")
userInput=user_input(ViperUi.displaySession(sessionManager.currentSession))
result=commandManager.executeCommand(userInput)
end function
init
while (true)
main
end while