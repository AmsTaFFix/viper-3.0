color = function(hex)
    result = function(str)
        return "<color=" + hex + ">" + str + "</color>"
    end function
    return @result
end function

ThemeManager = {}
ThemeManager.mediator = null
ThemeManager.colors = {
    "highlight": "#c3201f",
    "text": "#fff",
    "secondary": "#ffff",
    "warning": "#fffc33",
    "info": "#058fab",
    "success": "#0f0",
    "danger": "#c3201f",
    "error": "#c3201f",
}

// @param {string} colorName
// @param {string} text
// @return {string}
ThemeManager.colorText = function(colorName, text)
    return "<color=" + self.colors[colorName] + ">" + text + "</color>"
end function

ThemeManager.color = function(colorName, str)
    return @color(self.colors[colorName])
end function

ThemeManager.setMediator = function (mediator)
    self.mediator = mediator
end function

ThemeManager.init = function()
    configManager = self.mediator.getExtension("configManager")
    if not configManager.config.hasIndex("theme") then
        configManager.saveConfig({"theme": self.colors})
    end if
    self.colors = self.colors + configManager.config.theme
    configManager.saveConfig({"theme": themeManager.colors})
end function

ThemeManager.New = function()
    result = new ThemeManager
    result.colors = ThemeManager.colors
    return result
end function

module.exports = ThemeManager